#!/usr/bin/python3
# -*- coding: utf-8 -*-
import telebot
import sqlite3
from telebot import types

admin_list = [391545947, 64000151, 121485043, 339824315]
token = ''
bot = telebot.TeleBot(token)
CWBotID = 326394943


@bot.inline_handler(lambda query: query.query == '–ó–∞—â–∏—Ç–∞')
def query_text(inline_query):
    try:
        r = types.InlineQueryResultArticle('1', '–ó–∞—â–∏—Ç–∞', types.InputTextMessageContent('üõ° –ó–∞—â–∏—Ç–∞'))
        bot.answer_inline_query(inline_query.id, [r])
    except Exception as e:
        print(e)


@bot.inline_handler(lambda query: query.query == '‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π')
def query_text(inline_query):
    try:
        r = types.InlineQueryResultArticle('1', '‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π', types.InputTextMessageContent('‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π'))
        bot.answer_inline_query(inline_query.id, [r])
    except Exception as e:
        print(e)


@bot.inline_handler(lambda query: query.query == '‚ö™Ô∏è –ë–µ–ª—ã–π')
def query_text(inline_query):
    try:
        r = types.InlineQueryResultArticle('1', '‚ö™Ô∏è –ë–µ–ª—ã–π', types.InputTextMessageContent('‚ö™Ô∏è –ë–µ–ª—ã–π'))
        bot.answer_inline_query(inline_query.id, [r])
    except Exception as e:
        print(e)


@bot.inline_handler(lambda query: query.query == '–ö—Ä–∞—Å–Ω—ã–π')
def query_text(inline_query):
    try:
        r = types.InlineQueryResultArticle('1', '–ö—Ä–∞—Å–Ω—ã–π', types.InputTextMessageContent('üî¥ –ö—Ä–∞—Å–Ω—ã–π'))
        bot.answer_inline_query(inline_query.id, [r])
    except Exception as e:
        print(e)


@bot.inline_handler(lambda query: query.query == 'üåï –ñ—ë–ª—Ç—ã–π')
def query_text(inline_query):
    try:
        r = types.InlineQueryResultArticle('1', 'üåï –ñ—ë–ª—Ç—ã–π', types.InputTextMessageContent('üåï –ñ—ë–ª—Ç—ã–π'))
        bot.answer_inline_query(inline_query.id, [r])
    except Exception as e:
        print(e)


@bot.inline_handler(lambda query: query.query == 'üí• –ê—Ç–∞–∫–∞')
def query_text(inline_query):
    try:
        r = types.InlineQueryResultArticle('1', 'üí• –ê—Ç–∞–∫–∞', types.InputTextMessageContent('üí• –ê—Ç–∞–∫–∞'))
        bot.answer_inline_query(inline_query.id, [r])
    except Exception as e:
        print(e)


@bot.message_handler(commands=['red', 'blue', 'black', 'yellow', 'white', 'get_ready'])
def commands(message):
    send = 0
    bot.delete_message(message.chat.id, message.message_id)
    if '/red' in message.text and message.from_user.id in admin_list:
        blue = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–ö—Ä–∞—Å–Ω—ã–π", switch_inline_query='–ö—Ä–∞—Å–Ω—ã–π')
        blue.add(url_button)
        send = bot.send_message(message.chat.id, '–ò—Ç–∞–∫ —Å–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∞—Ç–∞–∫–µ –Ω–∞ üî¥ –ö—Ä–∞—Å–Ω—ã–π '
                                                 '–∫–≤–∞—Ä—Ç–∞–ª, –¥–ª—è —ç—Ç–æ–≥–æ –∂–º–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∞ –ø–æ—Ç–æ–º –Ω–∞ —á–∞—Ç —Å –∏–≥—Ä–æ–≤—ã–º '
                                                 '–±–æ—Ç–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.', reply_markup=blue)
    elif '/blue' in message.text and message.from_user.id in admin_list:
        blue = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–ó–∞—â–∏—Ç–∞", switch_inline_query='–ó–∞—â–∏—Ç–∞')
        blue.add(url_button)
        send = bot.send_message(message.chat.id, '–ò—Ç–∞–∫ —Å–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∑–∞—â–∏—Ç–µ üíô –°–∏–Ω–µ–≥–æ'
                                                 '–∫–≤–∞—Ä—Ç–∞–ª–∞, –¥–ª—è —ç—Ç–æ–≥–æ –∂–º–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∞ –ø–æ—Ç–æ–º –Ω–∞ —á–∞—Ç —Å –∏–≥—Ä–æ–≤—ã–º '
                                                 '–±–æ—Ç–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.', reply_markup=blue)
    elif '/black' in message.text and message.from_user.id in admin_list:
        blue = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π", switch_inline_query='‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π')
        blue.add(url_button)
        send = bot.send_message(message.chat.id, '–ò—Ç–∞–∫ —Å–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∞—Ç–∞–∫–µ –Ω–∞ ‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π '
                                                 '–∫–≤–∞—Ä—Ç–∞–ª, –¥–ª—è —ç—Ç–æ–≥–æ –∂–º–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∞ –ø–æ—Ç–æ–º –Ω–∞ —á–∞—Ç —Å –∏–≥—Ä–æ–≤—ã–º '
                                                 '–±–æ—Ç–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.', reply_markup=blue)
    elif '/yellow' in message.text and message.from_user.id in admin_list:
        blue = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="üåï –ñ—ë–ª—Ç—ã–π", switch_inline_query='üåï –ñ—ë–ª—Ç—ã–π')
        blue.add(url_button)
        send = bot.send_message(message.chat.id, '–ò—Ç–∞–∫ —Å–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∞—Ç–∞–∫–µ –Ω–∞ üåï –ñ—ë–ª—Ç—ã–π '
                                                 '–∫–≤–∞—Ä—Ç–∞–ª, –¥–ª—è —ç—Ç–æ–≥–æ –∂–º–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∞ –ø–æ—Ç–æ–º –Ω–∞ —á–∞—Ç —Å –∏–≥—Ä–æ–≤—ã–º '
                                                 '–±–æ—Ç–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.', reply_markup=blue)
    elif '/white' in message.text and message.from_user.id in admin_list:
        blue = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="‚ö™Ô∏è –ë–µ–ª—ã–π", switch_inline_query='‚ö™Ô∏è –ë–µ–ª—ã–π')
        blue.add(url_button)
        send = bot.send_message(message.chat.id, '–ò—Ç–∞–∫ —Å–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∞—Ç–∞–∫–µ –Ω–∞ ‚ö™Ô∏è –ë–µ–ª—ã–π '
                                                 '–∫–≤–∞—Ä—Ç–∞–ª, –¥–ª—è —ç—Ç–æ–≥–æ –∂–º–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∞ –ø–æ—Ç–æ–º –Ω–∞ —á–∞—Ç —Å –∏–≥—Ä–æ–≤—ã–º '
                                                 '–±–æ—Ç–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.', reply_markup=blue)
    elif 'get_ready' in message.text and message.from_user.id in admin_list:
        blue = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="üí• –ê—Ç–∞–∫–∞", switch_inline_query='üí• –ê—Ç–∞–∫–∞')
        blue.add(url_button)
        send = bot.send_message(message.chat.id, '–ò—Ç–∞–∫, —Å–∫–æ—Ä–æ –±–∏—Ç–≤–∞, –ø–∞—Ä–Ω–∏, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—à—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –í–°–ï–• –Ω–∞–∂–∞—Ç—å –Ω–∞ '
                                                 '–∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–º—É –±–æ—Ç—É, —Ç–∞–º –≤—ã–±—Ä–∞—Ç—å –≤ '
                                                 '–≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é "üí• –ê—Ç–∞–∫–∞" –∏ –Ω–µ–∫—É–¥–∞ –Ω–µ —É—Ö–æ–¥–∏—Ç—å. –ü—Ä–∏–∫–∞–∑ –Ω–∞ –∞—Ç–∞–∫—É/–∑–∞—â–∏—Ç—É'
                                                 ' –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. –°–ø–∞—Å–∏–±–æ.', reply_markup=blue)
    bot.pin_chat_message(message.chat.id, send.message_id)


@bot.message_handler(content_types=['text'])
def messages(message):
    if message.forward_from is not None:
        if message.forward_from.id == 326394943:
            if message.text.split('\n')[2][0] == 'üîµ' and '–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ' in message.text:
                if message.date - message.forward_date < 16:
                    data_base = sqlite3.connect('BB')
                    c = data_base.cursor()
                    c.execute('SELECT tgid FROM accounts')
                    temp = c.fetchone()
                    c.close()
                    data_base.close()
                    if message.from_user.id in temp:
                        pass
                    else:
                        bot.send_message(message.from_user.id, '–•–º.. —Ç–µ–±—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Å–µ–π—á–∞—Å —è —Ç–µ–±—è '
                                                               '–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é...')
                        strings = message.text.split('\n', maxsplit=-1)
                        if strings[4][0] == 'üõ†':
                            user_info = ['tgid', 'name', 'fl', 'wl', 'money', 'nhealth', 'mhealth', 'damage', 'agility',
                                         'agility', 'agility', 'agility']
                            user_info[0] = message.from_user.id
                            user_info[1] = strings[2].split('üîµ', maxsplit=1)[1].split(' ')[0]
                            user_info[2] = strings[3].split(': ')[1].split(' ')[0]
                            user_info[3] = strings[4].split(': ')[1].split(' ')[0]
                            user_info[4] = strings[5].split(': ')[1].split(' ')[0]
                            user_info[5] = strings[6].split(' / ')[0].split('‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ')[1]
                            user_info[6] = strings[6].split(' / ')[1].split(' ')[0]

                            user_info[7] = strings[7].split('üí• –ê—Ç–∞–∫–∞: ')[1].split(' ')[0]
                            if '+' in user_info[7]:
                                user_info[7] = int(user_info[7].split('+')[0]) + int(user_info[7].split('+')[1])

                            user_info[8] = strings[8].split('üõ° –ó–∞—â–∏—Ç–∞: ')[1].split(' ')[0]
                            if '+' in user_info[8]:
                                user_info[8] = int(user_info[8].split('+')[0]) + int(user_info[8].split('+')[1])

                            user_info[9] = strings[9].split('ü¶é –õ–æ–≤–∫–æ—Å—Ç—å: ')[1].split(' ')[0]
                            if '+' in user_info[9]:
                                user_info[9] = int(user_info[9].split('+')[0]) + int(user_info[9].split('+')[1])

                            user_info[10] = strings[10].split(' / ')[0].split('üîã –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ')[1]
                            user_info[11] = strings[10].split(' / ')[1].split(' ')[0]
                        else:
                            user_info = ['tgid', 'name', 'fl', 'wl', 'money', 'nhealth', 'mhealth', 'damage', 'agility',
                                         'agility', 'agility', 'agility']
                            user_info[0] = message.from_user.id
                            user_info[1] = strings[2].split('üîµ', maxsplit=1)[1].split(' ')[0]
                            user_info[2] = strings[3].split(': ')[1].split(' ')[0]
                            user_info[3] = 'NULL'
                            user_info[4] = strings[4].split(': ')[1].split(' ')[0]
                            user_info[5] = strings[5].split(' / ')[0].split('‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ')[1]
                            user_info[6] = strings[5].split(' / ')[1].split(' ')[0]
                            user_info[7] = strings[6].split('üí• –ê—Ç–∞–∫–∞: ')[1].split(' ')[0]
                            if '+' in user_info[7]:
                                user_info[7] = int(user_info[7].split('+')[0]) + int(user_info[7].split('+')[1])
                            user_info[8] = strings[7].split('üõ° –ó–∞—â–∏—Ç–∞: ')[1].split(' ')[0]
                            if '+' in user_info[8]:
                                user_info[8] = int(user_info[8].split('+')[0]) + int(user_info[8].split('+')[1])
                            user_info[9] = strings[8].split('ü¶é –õ–æ–≤–∫–æ—Å—Ç—å: ')[1].split(' ')[0]
                            if '+' in user_info[9]:
                                user_info[9] = int(user_info[9].split('+')[0]) + int(user_info[9].split('+')[1])
                            user_info[10] = strings[9].split(' / ')[0].split('üîã –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ')[1]
                            user_info[11] = strings[9].split(' / ')[1].split(' ')[0]
                        data_base = sqlite3.connect('BB')
                        c = data_base.cursor()
                        c.execute("INSERT INTO accounts (tgid,name,fl,wl,money,nhealth, mhealth,damage, defense, "
                                  "agility, nstamina, mstamina) VALUES ({},'{}',{},{},{},{},{},{},{},{},{},"
                                  "{})".format(user_info[0], user_info[1], user_info[2], user_info[3], user_info[4],
                                               user_info[5], user_info[6], user_info[7], user_info[8], user_info[9],
                                               user_info[10], user_info[11]))
                        data_base.commit()
                        c.close()
                        data_base.close()
                else:
                    bot.send_message(message.from_user.id, '–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª –º–Ω–µ —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–≤–∞—Ä–¥!')
            else:
                bot.send_message(message.from_user.id, '–ò–∑–≤–∏–Ω–∏, —è –ø–æ–∫–∞ –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–∏, –Ω–æ –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –∏ '
                                                       '–ø—Ä–æ—Ñ–∏–ª—å, —Ç–æ —Ç—ã —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ –∏–∑ üîµ–°–∏–Ω–µ–≥–æ –∫–≤–∞—Ä—Ç–∞–ª–∞')
        else:
            bot.send_message(message.from_user.id, '–ò–∑–≤–∏–Ω–∏, –Ω–æ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç —è —Ç–æ–ª—å–∫–æ —Å–æ–±–∏—Ä–∞—é –ø—Ä–æ—Ñ–∏–ª–∏.')


bot.polling(none_stop=True, interval=0, timeout=2000000000)
